# Copyright (C) 2020 Red Hat, Inc.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <https://www.gnu.org/licenses/>.

---

- hosts: all
  become: yes
  tasks:
  - name: get logs file names
    find:
      paths: "/var/log/ceph/{{ fsid }}"
      patterns: '*.log*gz'
    register: log_paths

  - name: create backup dirs
    delegate_to: localhost
    file:
      path: "{{ instance }}/{{ inventory_hostname }}/{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0755
      recurse: yes
    with_items:
    - log
    - crash

  - name: fetch logs
    synchronize:
      dest: "{{ instance }}/{{ inventory_hostname }}/log/"
      mode: pull
      src: "{{ item.path }}"
    with_items: "{{ log_paths.files }}"

  - name: find cores
    find:
      paths: /crash/
      patterns: '*'
    register: core_paths

  - name: gzip cores
    shell: gzip /crash/*
    when: core_paths.matched > 0

  - name: get core file names
    find:
      paths: /crash/
      patterns: '*.core.gz'
    register: core_paths

  - name: fetch cores
    synchronize:
      dest: "{{ instance }}/{{ inventory_hostname }}/crash/"
      mode: pull
      src: "{{ item.path }}"
    with_items: "{{ core_paths.files }}"

  - name: get stats db file names
    find:
      paths: /root/
      patterns: 'stats.db*'
    register: stats_paths

  - name: fetch stats db
    synchronize:
      dest: "{{ instance }}/{{ inventory_hostname }}/"
      mode: pull
      src: "{{ item.path }}"
    with_items: "{{ stats_paths.files }}"

  - name: get state file names
    find:
      paths: /root/
      patterns: '*.txt'
    register: state_paths

  - name: fetch state
    synchronize:
      dest: "{{ instance }}/{{ inventory_hostname }}/"
      mode: pull
      src: "{{ item.path }}"
    with_items: "{{ state_paths.files }}"
